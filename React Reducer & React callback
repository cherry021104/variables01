14-02-2025
React Hooks
React Reducer():
Callback()
React Reducer();
A reducer is a function that helps to update(like score ,a list) based on action we take
1)current State : The current value of a state
2)Action :
Example:
Action : add or remove an item
State: initial value (3 items) #3-apples
--Tracking
import React,{useReducer} from 'react';

//reducer funtion to track no of apples
function appleReduce(state=3,action){
  switch(action.type){
    case 'ADD_APPLE':
      return state+1;

      case'EAT_APPLE':
      return state-1;

      default:
        return state;
  }
}

function App(){
  const [state, dispatch]=useReducer(appleReduce)
  return(
    <div style={{padding:'20px',textAlign: 'center'}}>
      <h1 style={{ color: 'red' }}>Apple Counter</h1>
      <p  style={{ color: 'blue' }}> Number of apples:{state}</p>

      <button onClick= {()=>dispatch({type:'ADD_APPLE'})}
        style={{
          backgroundColor: 'lightgreen',
          //color: 'white',
          padding: '10px 20px',
          margin: '10px',
          border: 'none',
          borderRadius: '20px',
          cursor: 'pointer',
        }}>ADD APPLE</button>

      <button onClick= {()=>dispatch({type:'EAT_APPLE'})}
        style={{
          backgroundColor: 'lightgreen',
          //color: 'white',
          padding: '10px 20px',
          margin: '10px',
          border: 'none',
          borderRadius: '20px',
          cursor: 'pointer',
        }}>EAT APPLE</button>
    </div>
  )
}
export default App;

output 



Callback in React:
 In react, a callback is a function that is passed an argument to another function
 Callbacks are often to communicate with different components
Ex: A parent component passing as callback to a child 
 Parent component displays a message; and child component has a button
When the button is clicked, the child will use callback and tells the parent component to update



import React ,{useState} from 'react';
import Child from'./Child';

const Parent=()=>{
  const[message,setMessage]=useState('Hello word')

  const changeMessage=()=>{
    setMessage("you clicked the button")
  };
  return(
    <div>
      <h1>{message}</h1>
      <Child changeMessage={changeMessage}/>
    </div>
  )
}

export default Parent;

import React from "react";

const Child=({changeMessage})=>{
    return(
        <button onClick={changeMessage}>Click Me</button>
    )
}
    export default Child;

output:
you clicked the button
Click Me
